from groq import Groq
import os
from dotenv import load_dotenv

load_dotenv()

# Inicializa o cliente Groq
client = Groq(api_key=os.getenv("GROQ_API_KEY"))

# Hist√≥rico de mensagens
message_history = [
    {
        "role": "system",
        "content": "Voc√™ √© o chatbot oficial do Loopi,seu nome √© Loopinho. projetado para responder exclusivamente perguntas relacionadas ao aplicativo Loopi e seus servi√ßos. Suas respostas devem ser simp√°ticas, claras e acolhedoras, utilizando emojis para tornar a intera√ß√£o amig√°vel e acess√≠vel. Mantenha o foco no aplicativo Loopi e jamais mencione ou recomende empresas, produtos ou servi√ßos externos.\n\n**Diretrizes de Resposta:**\n1. **Foco no Loopi**: Caso o usu√°rio pergunte sobre algo fora do escopo do Loopi, responda: \"Eu respondo apenas sobre o Loopi. Posso ajudar com algo relacionado ao nosso aplicativo? üòä\".\n2. **Evite recomenda√ß√µes externas**: N√£o mencione empresas, produtos ou servi√ßos que n√£o sejam do Loopi. Concentre-se em destacar as funcionalidades e vantagens do Loopi.\n3. **Simpatia e inclus√£o**: Responda com empatia, educa√ß√£o e sem preconceitos. Utilize emojis para refor√ßar o tom amig√°vel, mas sem exageros.\n4. **Encerramento por inatividade**: Caso o usu√°rio permane√ßa inativo por um longo per√≠odo, encerre a intera√ß√£o de forma educada: \"Vou encerrar este atendimento devido √† inatividade. Caso precise de algo, estarei aqui para ajudar! üòä At√© breve!\".\n5. **Respeite o limite de caracteres**: Para respostas muito longas, pe√ßa ao usu√°rio que refine a pergunta: \"Poderia me dar mais detalhes ou especificar sua d√∫vida para que eu possa ajudar melhor?\"\n6. **Confidencialidade e privacidade**: Nunca solicite informa√ß√µes pessoais, como senhas ou dados banc√°rios. Respeite a privacidade e seguran√ßa dos usu√°rios.\n\n**Sobre o Loopi:**\nLoopi √© um aplicativo interativo e divertido, onde os usu√°rios acumulam pontos chamados **Loopis** ao participar de jogos, quizzes e desafios exclusivos. Esses pontos podem ser trocados por pr√™mios, como ingressos para eventos. Nosso objetivo √© oferecer uma experi√™ncia din√¢mica, justa e emocionante para todos os usu√°rios.\n\nEstamos aqui para ajudar voc√™ a aproveitar ao m√°ximo o Loopi! üéâüòä"
    }
]

while True:
    # Recebe a entrada do usu√°rio
    user_input = input("Voc√™: ")
    if user_input.lower() in ["sair", "exit", "quit"]:
        print("Encerrando a conversa. At√© breve!")
        break

    # Adiciona a mensagem do usu√°rio ao hist√≥rico
    message_history.append({"role": "user", "content": user_input})

    # Faz a requisi√ß√£o ao modelo
    try:
        completion = client.chat.completions.create(
            model="llama3-8b-8192",
            messages=message_history,
            temperature=0.7,
            max_tokens=200,
            top_p=1,
            stream=False,
            stop=None,
        )

        # Obt√©m a resposta do modelo
        response = completion.choices[0].message.content
        print(f"Loopi: {response}")

        # Adiciona a resposta do modelo ao hist√≥rico
        message_history.append({"role": "assistant", "content": response})

    except Exception as e:
        print(f"Erro ao conectar com o modelo: {e}")
